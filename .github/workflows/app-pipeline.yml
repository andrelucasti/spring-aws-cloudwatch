name: Build and Deploy APP

on:
  push:
    branches:
      - main

env:
  #AWS
  AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  AWS_DEFAULT_REGION: ${{secrets.AWS_REGION}}
  AWS_ACCOUNT_ID: ${{secrets.AWS_ACCOUNT_ID}}
  AWS_ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
  AWS_ECS_TASK_DEFINITION: .aws/task-definition.json
  
  #APP
  APP_NAME: springboot-cloudwatch
  IMAGE_TAG: ${{ github.sha }}


jobs:
  buildApp:
    runs-on: ubuntu-20.04
    name: Building the App
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: ECR Login
        id: aws-ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Image to ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.aws-ecr-login.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
          ECR_IMAGE_TAG: ${{ env.IMAGE_TAG }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

        run: | 
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$ECR_IMAGE_TAG .
            echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$ECR_IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Push Image to ECR
        env:
          ECR_REGISTRY: ${{ steps.aws-ecr-login.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY}}
          ECR_IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: docker push $ECR_REGISTRY/$ECR_REPOSITORY:$ECR_IMAGE_TAG

  Deploy:
    runs-on: ubuntu-20.04
    name: Deploy the App
    needs:
      - buildApp

    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@97587c9d45a4930bf0e3da8dd2feb2a463cf4a3a
        with:
          task-definition: ${{ env.AWS_ECS_TASK_DEFINITION }}
          container-name: ${{ env.APP_NAME }}
          image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.APP_NAME }}
          cluster: springboot-cloudwatch-cluster 




